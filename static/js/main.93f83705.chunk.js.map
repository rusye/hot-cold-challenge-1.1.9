{"version":3,"sources":["components/top-nav.js","components/header.js","components/feedback.js","components/guess-form.js","components/guess-section.js","components/guess-list.js","components/guess-count.js","components/aural-status.js","components/status-section.js","components/info-section.js","components/game.js","index.js"],"names":["TopNav","props","react_default","a","createElement","className","href","aria-label","onClick","onRestartGame","onGenerateAuralUpdate","Header","Feedback","guessAgain","key","guessCount","id","role","aria-live","aria-atomic","feedback","GuessForm","event","preventDefault","this","onMakeGuess","value","input","focus","_this","onSubmit","e","type","name","min","max","autoComplete","aria-labelledby","ref","required","React","Component","GuessSection","aria-describedby","guess_form_GuessForm","guess","GuessList","guesses","map","index","GuessCount","guessNoun","AuralStatus","auralStatus","StatusSection","length","infoSection","tabIndex","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","correctAnswer","Math","floor","random","setState","parseInt","isNaN","difference","abs","concat","toConsumableArray","document","title","_this$state","pluralize","reverse","join","_this2","_this$state2","restartGame","generateAuralUpdate","makeGuess","ReactDOM","render","game_Game","getElementById"],"mappings":"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","file":"static/js/main.93f83705.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './top-nav.css';\r\n\r\nexport default function TopNav(props) {\r\n  return (\r\n    <nav>\r\n      <ul className=\"clearfix\">\r\n        <li>\r\n          <a href=\"#what\" className=\"what\" aria-label=\"How to play\">\r\n            What?\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a \r\n            href=\"#feedback\" \r\n            className=\"new\" \r\n            aria-label=\"Start a new game\" \r\n            onClick={() => props.onRestartGame()}>\r\n            + New Game</a>\r\n        </li>\r\n\r\n        <li>\r\n          <a\r\n            href=\"#get-status\"\r\n            className=\"visuallyhidden focusable status-link\"\r\n            onClick={() => props.onGenerateAuralUpdate()}>\r\n            Hear state of game</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nimport TopNav from './top-nav';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header>\r\n      <TopNav\r\n        onGenerateAuralUpdate={() => props.onGenerateAuralUpdate()}\r\n        onRestartGame={() => props.onRestartGame()}\r\n      />\r\n\r\n      <h1>HOT or COLD</h1>\r\n    </header>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './feedback.css';\r\n\r\nexport default function Feedback(props) {\r\n  const key = props.guessCount;\r\n\r\n  let guessAgain;\r\n  if (key !== 0) {\r\n    guessAgain = <span className=\"visuallyhidden\">Guess again!</span>\r\n  }\r\n\r\n  return (\r\n    <h2\r\n      key={key}\r\n      id=\"feedback\"\r\n      role=\"status\"\r\n      aria-live=\"assertive\"\r\n      aria-atomic=\"true\"\r\n    >{props.feedback} {guessAgain}</h2>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './guess-form.css';\r\n\r\nexport default class GuessForm extends React.Component {\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.props.onMakeGuess) {\r\n      const value = this.input.value;\r\n      this.props.onMakeGuess(value);\r\n    }\r\n    this.input.value = '';\r\n    this.input.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"userGuess\"\r\n          id=\"userGuess\"\r\n          className=\"text\"\r\n          min=\"1\"\r\n          max=\"100\"\r\n          autoComplete=\"off\"\r\n          aria-labelledby=\"feedback\"\r\n          ref={input => (this.input = input)}\r\n          required\r\n        />\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          name=\"submit\"\r\n          id=\"guessButton\"\r\n          className=\"button\">Guess</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport Feedback from './feedback';\r\nimport GuessForm from './guess-form';\r\n\r\nexport default function GuessSection(props) {\r\n  const {feedback, guessCount} = props;\r\n  return (\r\n    <section aria-label=\"Guess section\" aria-describedby=\"feedback\">\r\n      <Feedback feedback={feedback} guessCount={guessCount} />\r\n      <GuessForm onMakeGuess={guess => props.onMakeGuess(guess)} />\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './guess-list.css';\r\n\r\nexport default function GuessList(props) {\r\n  const guesses = props.guesses.map((guess, index) => (\r\n    <li key={index}>\r\n      {guess}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <ul id=\"guessList\" className=\"guessBox clearfix\">{guesses}</ul>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './guess-count.css';\r\n\r\nexport default function GuessCount(props) {\r\n  const isPlural = props.guessCount !== 1;\r\n  const guessNoun = isPlural ? 'guesses' : 'guess';\r\n\r\n  return (\r\n    <h2 id=\"guessCount\">\r\n    You've made <span id=\"count\">{props.guessCount}</span> {guessNoun}</h2>\r\n  );\r\n}","import React from 'react';\r\n// may not need this file\r\n\r\nexport default function AuralStatus(props) {\r\n  return (\r\n    <p id=\"status-readout\"\r\n      className=\"visuallyhidden\"\r\n      aria-live=\"assertive\"\r\n      aria-atomic=\"true\">{props.auralStatus}\r\n    </p>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport GuessList from './guess-list';\r\nimport GuessCount from './guess-count';\r\nimport AuralStatus from './aural-status';\r\n\r\nexport default function StatusSection(props) {\r\n  const {guesses, auralStatus} = props;\r\n  const guessCount = guesses.length;\r\n\r\n  return (\r\n    <section aria-labelledby=\"guessCount\" aria-describedby=\"guessList\">\r\n      <GuessCount guessCount={guessCount} />\r\n      <GuessList guesses={guesses} />\r\n      <AuralStatus auralStatus={auralStatus} />\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport './info-section.css';\r\n\r\nexport default function infoSection(props) {\r\n  return (\r\n    <section id=\"what\" tabIndex=\"-1\">\r\n      <h2>What do I do?</h2>\r\n      <p>This is a Hot or Cold Number Guessing Game. The game goes like this:</p>\r\n      <ol>\r\n        <li>I pick a <strong>random secret number</strong> between 1 to 100 and keep it hidden.</li>\r\n        <li>You need to <strong>guess</strong> until you can find the hidden secret number.</li>\r\n        <li>You will <strong>get feedback</strong> on how close (\"hot\") or far (\"cold\") your guess is.</li>\r\n      </ol>\r\n      <p>If you're using a screen reader, you can use the visually hidden \"Hear state of game\" link in the navigation region to get a reminder of all your past guesses and how close your current guess is to being correct.</p>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport Header from './header';\r\nimport GuessSection from './guess-section';\r\nimport StatusSection from './status-section';\r\nimport InfoSection from './info-section';\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      guesses: [],\r\n      feedback: 'Make your guess!',\r\n      auralStatus: '',\r\n      correctAnswer: Math.floor(Math.random() * 100) +1\r\n    };\r\n  }\r\n\r\n  restartGame() {\r\n    this.setState({\r\n      guesses: [],\r\n      feedback: 'Make your guess!',\r\n      auralStatus: '',\r\n      correctAnswer: Math.floor(Math.random() * 100) +1\r\n    });\r\n  }\r\n\r\n  makeGuess(guess) {\r\n    guess = parseInt(guess, 10);\r\n    if (isNaN(guess)) {\r\n      this.setState({feedback: 'Please enter a valid number'});\r\n      return;\r\n    }\r\n\r\n    const difference = Math.abs(guess - this.state.correctAnswer);\r\n\r\n    let feedback;\r\n    if (difference >= 50) {\r\n      feedback = 'You\\'re Ice Cold...';\r\n    } else if (difference >= 30) {\r\n      feedback = 'You\\'re Cold...'\r\n    } else if (difference >= 10) {\r\n      feedback = 'You\\'re Warm.'\r\n    } else if (difference >= 1) {\r\n      feedback = 'You\\'re Hot!'\r\n    } else {\r\n      feedback = 'You got it!'\r\n    }\r\n\r\n    this.setState({\r\n      feedback,\r\n      guesses: [...this.state.guesses, guess]\r\n    });\r\n\r\n    document.title = feedback ? `${feedback} | Hot or Cold` : 'Hot or Cold';\r\n  }\r\n\r\n  generateAuralUpdate() {\r\n    const { guesses, feedback } = this.state;\r\n\r\n    const pluralize = guesses.length !== 1;\r\n\r\n    let auralStatus = `Here's the state of the game right now: ${feedback} You've made ${guesses.length} ${pluralize ? 'guesses' : 'guess'}`;\r\n\r\n    if (guesses.length > 0) {\r\n      auralStatus += `${pluralize ? 'In order of most- to least-recent, they are' : 'It was'}: ${guesses.reverse().join(', ')}`;\r\n    }\r\n\r\n    this.setState({auralStatus});\r\n  }\r\n\r\n  render() {\r\n    const { feedback, guesses, auralStatus } = this.state;\r\n    const guessCount = guesses.length;\r\n\r\n    return (\r\n      <div>\r\n        <Header\r\n          onRestartGame={() => this.restartGame()}\r\n          onGenerateAuralUpdate={() => this.generateAuralUpdate()} \r\n        />\r\n\r\n        <main role=\"main\">\r\n          <GuessSection\r\n            feedback={feedback}\r\n            guessCount={guessCount}\r\n            onMakeGuess={guess => this.makeGuess(guess)}\r\n          />\r\n          <StatusSection guesses={guesses}\r\n            auralStatus={auralStatus}\r\n          />\r\n          <InfoSection />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Game from './components/game';\n\n// change app to what ever I'm importing\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}